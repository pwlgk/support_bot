# bot/handlers/client/view_requests.py
import logging
from html import escape  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è HTML-—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

from aiogram import F, Router, types
from aiogram.filters import Command
from sqlalchemy.ext.asyncio import AsyncSession

from bot.keyboards.reply import \
    MY_REQUESTS_BTN_TEXT  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞
from db.crud import \
    get_client_requests  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º CRUD —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞
from db.models import RequestStatus  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Enum —Å—Ç–∞—Ç—É—Å–æ–≤

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–¥—É–ª—è
router = Router()

# –ö–∞—Ä—Ç–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ Enum –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
STATUS_MAP_CLIENT = {
    RequestStatus.WAITING: "‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç–∏—è",
    RequestStatus.IN_PROGRESS: "üõ†Ô∏è –í —Ä–∞–±–æ—Ç–µ",
    # –°—Ç–∞—Ç—É—Å COMPLETED –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É –æ—Ç–¥–µ–ª—å–Ω–æ, —Ç.–∫. –æ–Ω —Å—Ä–∞–∑—É —É—Ö–æ–¥–∏—Ç –≤ –∞—Ä—Ö–∏–≤
    # RequestStatus.COMPLETED: "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ (–æ–∂–∏–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏)",
    # –°—Ç–∞—Ç—É—Å—ã ARCHIVED –∏ CANCELED –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞—é—Ç—Å—è –≤ CRUD-–∑–∞–ø—Ä–æ—Å–µ
}

@router.message(F.text == MY_REQUESTS_BTN_TEXT)
@router.message(Command("my_requests"))
async def client_view_my_requests(message: types.Message, session: AsyncSession):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ú–æ–∏ –∑–∞—è–≤–∫–∏" –∏ –∫–æ–º–∞–Ω–¥—ã /my_requests –∫–ª–∏–µ–Ω—Ç–∞.
    –ü–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö (–Ω–µ –∞—Ä—Ö–∏–≤–Ω—ã—Ö, –Ω–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã—Ö) –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    if not user_id:
        # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, —Ö–æ—Ç—è –¥–ª—è message —ç—Ç–æ –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID.")
        return

    logging.info(f"Client {user_id} requested their requests list.")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        requests_list = await get_client_requests(session, user_id)
    except Exception as e:
        logging.error(f"Database error fetching requests for client {user_id}: {e}", exc_info=True)
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞—è–≤–∫–∏
    if not requests_list:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–ª–∏ –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    response_lines = ["<b>–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞—è–≤–∫–∏:</b>\n"] # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å HTML-—Ç–µ–≥–æ–º –∂–∏—Ä–Ω–æ–≥–æ —à—Ä–∏—Ñ—Ç–∞
    for req in requests_list:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        status_text = STATUS_MAP_CLIENT.get(req.status, f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π ({req.status.value})")

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω–∂–µ–Ω–µ—Ä–µ, –µ—Å–ª–∏ –æ–Ω –Ω–∞–∑–Ω–∞—á–µ–Ω
        engineer_info = ""
        if req.engineer and req.status == RequestStatus.IN_PROGRESS: # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–∂–µ–Ω–µ—Ä–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞—è–≤–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ
            # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∏–º—è –∏–Ω–∂–µ–Ω–µ—Ä–∞
            safe_engineer_name = escape(req.engineer.first_name or f"ID {req.engineer.id}")
            engineer_info = f" (–ò–Ω–∂–µ–Ω–µ—Ä: {safe_engineer_name})"

        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π HTML-—Å–∏–º–≤–æ–ª–æ–≤ –∏ –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å
        safe_description = escape(req.description[:60]) # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ–¥–Ω–æ–π –∑–∞—è–≤–∫–∏
        response_lines.append(
            f"<b>#{req.id}</b> ({req.created_at.strftime('%d.%m.%y')}) - {status_text}{engineer_info}\n"
            f"   <i>–û–ø–∏—Å–∞–Ω–∏–µ:</i> {safe_description}..."
        )

    # –°–æ–±–∏—Ä–∞–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    full_response = "\n\n".join(response_lines)

    # TODO: –î–æ–±–∞–≤–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –∑–∞—è–≤–æ–∫ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ.
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ü–û–õ–ù–´–• –¥–µ—Ç–∞–ª–µ–π –∫–∞–∂–¥–æ–π –∑–∞—è–≤–∫–∏,
    #       –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è (—Å–µ–π—á–∞—Å –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é).

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É—è parse_mode –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (HTML)
        await message.answer(full_response)
    except Exception as e:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ)
        logging.error(f"Error sending client request list message for user {user_id}: {e}", exc_info=True)
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏.")